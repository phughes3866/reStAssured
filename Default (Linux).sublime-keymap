[
    {
        "keys": ["ctrl+t", "enter"], "command": "table", "context":
          [
            { "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }
          ]
    }, {
        "keys": ["ctrl+t", "s"], "command": "simpletable", "context":
          [
            { "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }
          ]
    }, {
        "keys": ["ctrl+t", "r"], "command": "flowtable", "context":
          [
            { "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }
          ]
    }, {
        "keys": ["ctrl+t", "down"], "command": "merge_cells_down", "context":
          [
            { "key": "selector", "operator": "equal", "operand": "text.restructuredtext" },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "^\\s*\\|*" }

          ]
    }, {
        "keys": ["ctrl+t", "up"], "command": "merge_cells_up", "context":
          [
            { "key": "selector", "operator": "equal", "operand": "text.restructuredtext" },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "^\\s*\\|*" }

          ]
    }, {
        "keys": ["ctrl+t", "right"], "command": "merge_cells_right", "context":
          [
            { "key": "selector", "operator": "equal", "operand": "text.restructuredtext" },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "^\\s*\\|*" }

          ]
    }, {
        "keys": ["ctrl+t", "left"], "command": "merge_cells_left", "context":
          [
            { "key": "selector", "operator": "equal", "operand": "text.restructuredtext" },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "^\\s*\\|*" }

          ]
    }, { "keys": ["enter"], "command": "smart_list", "context":
          [
            { "key": "selector", "operator": "equal", "operand": "text.restructuredtext" },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains",
              "operand": "^\\s*([-+*]|([(]?(\\d+|#|[a-y]|[A-Y]|[MDCLXVImdclxvi]+))[).])\\s+", "match_all": true }
          ]
    },
    { "keys": ["shift+tab"], "command": "header_folding_on_off","context":
        [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }]},
    { "keys": ["ctrl+keypad_plus"], "command": "header_change_level_up", "context":
        [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }]},
    { "keys": ["ctrl+keypad_minus"], "command": "header_change_level_down", "context":
        [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }]},



    { "keys": ["tab"], "command": "header_markings_filler", "context":
        [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext" },
         { "key": "preceding_text", "operator": "regex_match", "operand": "([!\\\"#$%&'\\\\()*+,\\-./:;<=>?@\\[\\]\\^_`{|}~])\\1\\1+$" }]},


    { "keys": ["alt+pageup"], "command": "magic_footnotes", "context":
        [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext", "match_all": true },]},

    { "keys": ["alt+home"], "command": "go_to_footnote_reference", "context":
        [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext", "match_all": true },]},

    { "keys": ["alt+end"], "command": "go_to_footnote_definition", "context":
        [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext", "match_all": true },]},

    { "keys": ["alt+pagedown"], "command": "insert_footnote", "context":
        [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext", "match_all": true },]},


     { "keys": ["alt+down"], "command": "jump_forward_any_level", "context":
        [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }]},
    { "keys": ["alt+shift+down"], "command": "jump_forward_same_level", "context":
        [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }]},
    { "keys": ["alt+up"], "command": "jump_back_any_level", "context":
        [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }]},
    { "keys": ["alt+shift+up"], "command": "jump_back_same_level", "context":
        [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }]},


    
    { "keys": ["tab"], "command": "indent_list_item", "context":
        [
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "^\\s*([-+*]|([(]?(\\d+|#|[a-y]|[A-Y]|[MDCLXVImdclxvi]+))[).])\\s+$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^$", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "text.restructuredtext", "match_all": true }
        ]
    },
    { "keys": ["shift+tab"], "command": "indent_list_item", "args": {"reverse": true}, "context":
        [
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "^\\s*([-+*]|([(]?(\\d+|#|[a-y]|[A-Y]|[MDCLXVImdclxvi]+))[).])\\s+$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^$", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "text.restructuredtext", "match_all": true }
        ]
    },

  // Auto-pair (for *`| characters)
  // i.e. surround selection for *italic*, |substitution|, **bold** etc.
	{ "keys": ["*"], "command": "emphasis", "context": 
	    [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }]},
	{ "keys": ["`"], "command": "back_tick", "context": 
	    [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }]},
	{ "keys": ["|"], "command": "substitution", "context": 
	    [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }]},
	{ "keys": ["ctrl+alt+b"], "command": "strong_emphasis", "context":
	    [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }]},
    { "keys": ["ctrl+alt+k"], "command": "literal", "context":
	    [{ "key": "selector", "operator": "equal", "operand": "text.restructuredtext" }]},

]
